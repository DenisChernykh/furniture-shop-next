// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

generator client {
  provider = "prisma-client-js"
}

model SectionAbout {
  id          String   @id @default(uuid())
  title       String
  description String
  createdAt   DateTime @default(now())
}

model SectionStatistics {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  title     String
  indicator String
}

model TeamMember {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  firstName String
  lastName  String
  imageUrl  String
  position  String
}

model SectionTeam {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
}

model SectionAdvantages {
  id         String       @id @default(uuid())
  createdAt  DateTime     @default(now())
  title      String
  advantages Advantages[]
}

model Advantages {
  id                  String             @id @default(uuid())
  createdAt           DateTime           @default(now())
  iconUrl             String
  item                String
  SectionAdvantages   SectionAdvantages? @relation(fields: [sectionAdvantagesId], references: [id])
  sectionAdvantagesId String
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  firstName String
  lastName  String
  email     String   @unique
  username  String   @unique
  reviews   Review[]
}

model Review {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Project {
  id          String        @id @default(uuid())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  name        String
  price       Int
  imageUrl    Int
  description String
  about       ProjectAbout?
}

model ProjectAbout {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String
  description String
  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId   String   @unique
}

model SectionMaterials {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String
  description String
  features    String[]
  imageUrl    String
  order       Int
}
